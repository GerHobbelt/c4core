# DO NOT EDIT - GENERATED FROM .github/workflows-in/macosx.ys

name: macosx
defaults:
  run:
    shell: bash -e -x {0}
'on':
  workflow_dispatch: null
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
env:
  PROJ_PKG_NAME: c4core-
  PROJ_PFX_TARGET: c4core-
  PROJ_PFX_CMAKE: C4CORE_
  CMAKE_FLAGS: null
  NUM_JOBS_BUILD: null
jobs:
  xcode:
    if: always()
    continue-on-error: false
    name: xcode${{matrix.xcver}}/c++${{matrix.std}}/${{matrix.bt}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
        - std: 11
          cxx: xcode
          xcver: 15
          bt: Debug
          os: macos-13
          bitlinks: shared64 static64
        - std: 11
          cxx: xcode
          xcver: 15
          bt: Release
          os: macos-13
          bitlinks: shared64 static64
        - std: 17
          cxx: xcode
          xcver: 15
          bt: Debug
          os: macos-13
          bitlinks: shared64 static64
        - std: 17
          cxx: xcode
          xcver: 15
          bt: Release
          os: macos-13
          bitlinks: shared64 static64
        - std: 11
          cxx: xcode
          xcver: 14
          bt: Debug
          os: macos-13
          bitlinks: shared64 static64
        - std: 11
          cxx: xcode
          xcver: 14
          bt: Release
          os: macos-13
          bitlinks: shared64 static64
        - std: 17
          cxx: xcode
          xcver: 14
          bt: Debug
          os: macos-13
          bitlinks: shared64 static64
        - std: 17
          cxx: xcode
          xcver: 14
          bt: Release
          os: macos-13
          bitlinks: shared64 static64
    env:
      STD: ${{matrix.std}}
      CXX_: ${{matrix.cxx}}
      BT: ${{matrix.bt}}
      BITLINKS: ${{matrix.bitlinks}}
      VG: ${{matrix.vg}}
      SAN: ${{matrix.san}}
      LINT: ${{matrix.lint}}
      OS: ${{matrix.os}}
    steps:
    - name: checkout (action)
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    - name: xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{matrix.xcver}}
    - name: install requirements
      run: source .github/reqs.sh && c4_install_test_requirements $OS
    - name: show info
      run: source .github/setenv.sh && c4_show_info
    - name: shared64-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test shared64
    - name: shared64-build
      run: source .github/setenv.sh && c4_build_test shared64
    - name: shared64-run
      run: source .github/setenv.sh && c4_run_test shared64
    - name: shared64-pack
      run: source .github/setenv.sh && c4_package shared64
    - name: static64-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test static64
    - name: static64-build
      run: source .github/setenv.sh && c4_build_test static64
    - name: static64-run
      run: source .github/setenv.sh && c4_run_test static64
    - name: static64-pack
      run: source .github/setenv.sh && c4_package static64
    - name: static32-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test static32
    - name: static32-build
      run: source .github/setenv.sh && c4_build_test static32
    - name: static32-run
      run: source .github/setenv.sh && c4_run_test static32
    - name: static32-pack
      run: source .github/setenv.sh && c4_package static32
    - name: shared32-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test shared32
    - name: shared32-build
      run: source .github/setenv.sh && c4_build_test shared32
    - name: shared32-run
      run: source .github/setenv.sh && c4_run_test shared32
    - name: shared32-pack
      run: source .github/setenv.sh && c4_package shared32
